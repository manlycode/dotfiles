set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" My Bundles here:
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'tpope/vim-rails.git'
Bundle 'tpope/vim-rake'

" Style
Bundle "bling/vim-airline"

" Color Schemes
Bundle 'vividchalk.vim'
Bundle '29decibel/codeschool-vim-theme'
Bundle 'altercation/vim-colors-solarized'

" Utilities
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'junegunn/tabularize'
Bundle 'ervandew/supertab'
Bundle 'tsaleh/vim-matchit'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'tpope/vim-surround'
Bundle 'mattn/webapi-vim'
Bundle 'mattn/gist-vim'
Bundle 'sjl/gundo.vim'
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'
Bundle 'tpope/vim-endwise'
Bundle 'Raimondi/delimitMate'
Bundle 'AutoTag'
Bundle 'LnL7/vim-tslime'


" Select Ruby blocks as text objects
Bundle 'kana/vim-textobj-user.git'
Bundle 'kana/vim-textobj-entire.git'
Bundle 'kana/vim-textobj-indent.git'
Bundle 'kana/vim-textobj-syntax.git'
Bundle 'kana/vim-textobj-line.git'
Bundle 'nelstrom/vim-textobj-rubyblock.git'

" Searching
Bundle "tpope/vim-abolish"

" Snippets
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle "tomtom/tlib_vim"
Bundle 'garbas/vim-snipmate'
Bundle 'honza/vim-snippets'

" Language Support
Bundle 'kchmck/vim-coffee-script'
Bundle 'vim-ruby/vim-ruby'
Bundle 'pangloss/vim-javascript'
Bundle 'moll/vim-node'
Bundle 'suan/vim-instant-markdown'
Bundle 'ChrisYip/Better-CSS-Syntax-for-Vim'

Bundle 'tpope/vim-bundler'

" Dash
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'

syntax enable

set encoding=utf-8
set autoindent smartindent
set smarttab
set expandtab
set tabstop=2
set shiftwidth=2
set shiftround
set copyindent
set preserveindent

filetype on
filetype indent on
filetype plugin on
filetype plugin indent on

set showmatch

set shell=/bin/bash\ --rcfile\ ~/.bashrc
let mapleader=","

set ignorecase
set smartcase
set backspace=indent,eol,start

set nobackup
set nowb
set noswapfile

set number
set ruler

nnoremap <C-l> :nohlsearch<CR>
nnoremap <leader>v :tabedit $MYVIMRC<CR>

" NERDTree
nnoremap <leader>n :NERDTreeToggle<CR>


if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

" TextMate style character navigation
" for insert mode
imap <C-f> <Right>
imap <C-b> <Left>
imap <C-e> <Esc>A
imap <C-a> <Esc>^i

set wildignore+=*.o,*.obj,.git,log/**,vendor/**,*/plugins/*,*/node_modules/*,tags,gems.tags
set switchbuf=useopen


" Mark unwanted spaces
set list
set listchars=tab:\ \
set listchars+=trail:Â·
set listchars+=extends:>
set listchars+=precedes:<

" Copy from OS
set clipboard=unnamed

set showcmd
set hlsearch
set incsearch

vmap <C-c><C-c> <Plug>SendSelectionToTmux
nmap <C-c><C-c> <Plug>NormalModeSendToTmux
nmap <C-c>r <Plug>SetTmuxVars


colorscheme solarized


set laststatus=2             "Always show the status bar and not on splited like before(this was the main problem)

"to fix the font and lot of strange characters and colors
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\

" Find word in project
nmap <leader>fw :vimgrep /<C-r><C-w>/ **/*
nmap <leader>fl yy :vimgrep /<C-r><C-0>/ **/*

cabbr W w
cabbr Q q

" Gist settings
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1


" Filetypes
au BufNewFile,BufRead *.css.erb set ft=css
let g:airline_powerline_fonts = 1
