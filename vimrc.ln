set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

Bundle 'faith/vim-go'

" My Bundles here:
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'tpope/vim-rails.git'
Bundle 'tpope/vim-rake'

" Style
Bundle "bling/vim-airline"

" Color Schemes
Bundle 'vividchalk.vim'
Bundle '29decibel/codeschool-vim-theme'
Bundle 'altercation/vim-colors-solarized'
Bundle 'nanotech/jellybeans.vim'
Bundle 'chriskempson/vim-tomorrow-theme'
Bundle 'tomasr/molokai'
Bundle 'sickill/vim-monokai'
Bundle 'sjl/badwolf'
" Utilities
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'junegunn/tabularize'
Bundle 'ervandew/supertab'
Bundle 'tsaleh/vim-matchit'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'tpope/vim-surround'
Bundle 'mattn/webapi-vim'
Bundle 'mattn/gist-vim'
Bundle 'sjl/gundo.vim'
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'
Bundle 'tpope/vim-endwise'
Bundle 'Raimondi/delimitMate'
" Bundle 'AutoTag'
Bundle 'LnL7/vim-tslime'
Bundle 'vim-scripts/taglist.vim'
"Bundle 'jeetsukumaran/vim-buffergator'
Bundle 'godlygeek/tabular'

" Select Ruby blocks as text objects
Bundle 'kana/vim-textobj-user.git'
Bundle 'kana/vim-textobj-entire.git'
Bundle 'kana/vim-textobj-indent.git'
Bundle 'kana/vim-textobj-syntax.git'
Bundle 'kana/vim-textobj-line.git'
Bundle 'nelstrom/vim-textobj-rubyblock.git'

" Searching
Bundle "tpope/vim-abolish"
Bundle "rking/ag.vim"

" Snippets
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'garbas/vim-snipmate'
Bundle 'honza/vim-snippets'

" Language Support
Bundle 'kchmck/vim-coffee-script'
Bundle 'vim-ruby/vim-ruby'
Bundle 'pangloss/vim-javascript'
Bundle 'moll/vim-node'
Bundle 'ChrisYip/Better-CSS-Syntax-for-Vim'
Bundle 'ekalinin/Dockerfile.vim'
Bundle 'groenewege/vim-less'
Bundle 'tpope/vim-rbenv'
Bundle 'timcharper/textile.vim'
Bundle 'greyblake/vim-preview'
Bundle 'tpope/vim-bundler'
Bundle 'jade.vim'

" Testing
"Bundle 'jgdavey/vim-turbux'
Bundle 'thoughtbot/vim-rspec'
Bundle 'tpope/vim-dispatch'

let g:rspec_command = "Dispatch rspec {spec}"

" Dash
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'

" Emett
Bundle 'mattn/emmet-vim'

if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

" END VIMRC

source ~/.vimrc.common

