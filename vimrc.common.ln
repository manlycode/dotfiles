
syntax enable

set encoding=utf-8
set autoindent smartindent
set smarttab
set expandtab
set tabstop=2
set shiftwidth=2
set shiftround
set copyindent
set preserveindent

filetype on
filetype indent on
filetype plugin on
filetype plugin indent on

set showmatch

set shell=/bin/bash\ --rcfile\ ~/.bashrc
let mapleader=","

set ignorecase
set smartcase
set backspace=indent,eol,start

set nobackup
set nowb
set noswapfile

set number
set ruler

nnoremap <C-l> :nohlsearch<CR>
nnoremap <leader>v :tabedit $MYVIMRC<CR>

" NERDTree
nnoremap <leader>n :NERDTreeToggle<CR>



" TextMate style character navigation
" for insert mode
imap <C-f> <Right>
imap <C-b> <Left>
imap <C-e> <Esc>A
imap <C-a> <Esc>^i

set wildignore+=*.o,*.obj,.git,log/**,coverage/**,vendor/**,*/plugins/*,*/node_modules/*,tags,gems.tags,tmp,log
set switchbuf=useopen


" Mark unwanted spaces
set list
set listchars=tab:\ \
set listchars+=trail:Â·
set listchars+=extends:>
set listchars+=precedes:<

" Copy from OS
set clipboard=unnamed

set showcmd
set hlsearch
set incsearch

vmap <C-c><C-c> <Plug>SendSelectionToTmux
nmap <C-c><C-c> <Plug>NormalModeSendToTmux
nmap <C-c>r <Plug>SetTmuxVars


colorscheme molokai


set laststatus=2             "Always show the status bar and not on splited like before(this was the main problem)

"to fix the font and lot of strange characters and colors
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\

" Find word in project
nmap <leader>fw :grep "<C-r><C-w>"<CR>
nmap <leader>fl yy :grep "<C-r><C-0>"<CR>

cabbr W w
cabbr Q q

" Gist settings
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1


" Filetypes
au BufNewFile,BufRead *.css.erb set ft=css
"let g:airline_powerline_fonts = 1


set background=dark

set mouse=a

" The Silver Searcher
if executable('ag')
  " user ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " use it in ctrl-p for listing files
  let g:ctrl_puser_command = 'ag %s -l --nocolor -g ""'

  " Turn off the ctrl p cache
  let g:ctrl_use_caching = 0
endif

nmap <Leader>t :call RunCurrentSpecFile()<CR>
nmap <Leader>T :call RunNearestSpec()<CR>
nmap <Leader>l :call RunLastSpec()<CR>
nmap <Leader>a :call RunAllSpecs()<CR>
